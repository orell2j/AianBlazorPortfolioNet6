// <auto-generated />
using System;
using AianBlazorPortfolioNet6.Components.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AianBlazorPortfolioNet6.Migrations
{
    [DbContext(typeof(TestimonialDbContext))]
    partial class TestimonialDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AianBlazorPortfolioNet6.Components.Models.SiteContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("AboutTextEnglish")
                        .HasColumnType("text");

                    b.Property<string>("AboutTextFrench")
                        .HasColumnType("text");

                    b.Property<string>("CVFileEnglishUrl")
                        .HasColumnType("text");

                    b.Property<string>("CVFileFrenchUrl")
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("text");

                    b.Property<string>("GithubUrl")
                        .HasColumnType("text");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("text");

                    b.Property<string>("SkillsContentEnglish")
                        .HasColumnType("text");

                    b.Property<string>("SkillsContentFrench")
                        .HasColumnType("text");

                    b.Property<string>("WorksContentEnglish")
                        .HasColumnType("text");

                    b.Property<string>("WorksContentFrench")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SiteContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutTextEnglish = "Hello! I'm Aian Batoochirov, <br><br> a passionate Computer Science student at Champlain College. <br> I've worked on projects full stack webapp projects like a veterinary management system and a billing automation platform. <br><br>I'm eager to learn new technologies and am looking for an internship where I can contribute and grow. Let's connect and create something great together!",
                            AboutTextFrench = "Bonjour ! Je suis Aian Batoochirov, <br><br>\r\nun étudiant passionné en informatique au Collège Champlain. <br>\r\nJ'ai travaillé sur des projets full-stack, tels qu'un système de gestion vétérinaire et une plateforme d'automatisation de la facturation. <br><br>\r\nJe suis avide d'apprendre de nouvelles technologies et je recherche un stage où je pourrais contribuer et évoluer. Connectons-nous et créons ensemble quelque chose de grand !",
                            CVFileEnglishUrl = "/files/CV Aian Batoochirov EN.pdf",
                            CVFileFrenchUrl = "/files/CV Aian Batoochirov FR.pdf",
                            ContactEmail = "aianbat50@gmail.com",
                            ContactPhone = "+1 (438) 528-3019",
                            GithubUrl = "https://github.com/orell2j",
                            LinkedInUrl = "http://www.linkedin.com/in/aian-batoochirov-50521318b",
                            SkillsContentEnglish = "<p>Skills:<br>Java / Springboot, Agile / Scrum, Github / Git, Jira, Rest API, JavaScript / React, Micro Services, Linux, HTML / CSS, SQL / Databases, Teamwork, Problem Solver</p>",
                            SkillsContentFrench = "<p>Compétences:<br>Java / Springboot, Agile / Scrum, Github / Git, Jira, Rest API, JavaScript / React, Micro Services, HTML / CSS, SQL / Databases, Travail d'équipe, Résolution de problèmes</p>",
                            WorksContentEnglish = "<p>\r\n  Projects:<br>\r\n  • Veterinary Management System – <a href=\"https://github.com/cgerard321/champlain_petclinic\" target=\"_blank\">GitHub Repo</a><br>\r\n  • Billing Automation Platform – <a href=\"https://github.com/Carlos-123321/CompteExpress\" target=\"_blank\">GitHub Repo</a>\r\n</p>",
                            WorksContentFrench = "<p>\r\n  Projets :<br>\r\n  • Système de gestion vétérinaire – <a href=\"https://github.com/cgerard321/champlain_petclinic\" target=\"_blank\">Dépôt GitHub</a><br>\r\n  • Plateforme d'automatisation de la facturation – <a href=\"https://github.com/Carlos-123321/CompteExpress\" target=\"_blank\">Dépôt GitHub</a>\r\n</p>"
                        });
                });

            modelBuilder.Entity("AianBlazorPortfolioNet6.Components.Models.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Featured")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Approved = true,
                            Comment = "Great portfolio!",
                            CreatedOn = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Featured = true,
                            Name = "John Doe",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 2,
                            Approved = true,
                            Comment = "Very professional work.",
                            CreatedOn = new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Featured = false,
                            Name = "Jane Smith",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 3,
                            Approved = true,
                            Comment = "Excellent design!",
                            CreatedOn = new DateTime(2025, 1, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Featured = false,
                            Name = "Alex Johnson",
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 4,
                            Approved = true,
                            Comment = "Impressive work.",
                            CreatedOn = new DateTime(2025, 1, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Featured = false,
                            Name = "Emily Davis",
                            Rating = 4.5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
