@page "/login"
@layout AianBlazorPortfolioNet6.Shared.EmptyLayout
@using AianBlazorPortfolioNet6.Components.Models
@inject NavigationManager Navigation


<section class="login-page">
    <div class="row">
        <div class="col">
            <h3 class="login-title">Login</h3>
            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <InputText @bind-Value="loginModel.Username" placeholder="Username" class="login-input" />
                </div>
                <div class="form-group">
                    <InputText @bind-Value="loginModel.Password" type="password" placeholder="Password" class="login-input" />
                </div>
                <div class="login-actions">
                    <button type="submit" class="login-btn">Login</button>
                </div>
            </EditForm>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <p class="login-error">@errorMessage</p>
            }

            <div class="login-back">
                <button class="back-btn" @onclick="GoBack">Back</button>
            </div>
        </div>
    </div>
</section>

<style>
    .login-page {
        display: flex;
        min-height: 100vh;
        align-items: center;
        justify-content: center;
        background-color: #D9D9D9;
        padding: 20px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: center;
        width: 100%;
    }

    .col {
        flex: 0 0 auto;
        max-width: 400px;
        width: 100%;
        background-color: #202020;
        border-radius: 50px;
        box-shadow: 0 9px 4px rgba(0, 0, 0, 0.25);
        padding: 40px;
        text-align: center;
    }

    .login-title {
        font-size: clamp(1.8rem, 3vw, 2.5rem);
        margin-bottom: 20px;
        color: #D9D9D9;
    }

    .form-group {
        margin-bottom: 20px;
        padding-right:30px;
    }

    .login-input {
        width: 100%;
        padding: 15px;
        border-radius: 50px;
        border: none;
        font-size: 18px;
        box-shadow: 0 9px 4px rgba(0, 0, 0, 0.25);
        background-color: #D9D9D9;
        color: #000;
    }

    .login-actions {
        margin-top: 20px;
    }

    .login-btn {
        background-color: #D9D9D9;
        padding: 15px 30px;
        font-size: 20px;
        border-radius: 50px;
        color: #000;
        border: none;
        cursor: pointer;
        box-shadow: 0 9px 4px rgba(0, 0, 0, 0.25);
        transition: background-color 0.3s ease;
    }

        .login-btn:hover {
            background-color: #bfbfbf;
        }

    .login-error {
        color: #ff0000;
        margin-top: 10px;
    }

    .login-back {
        margin-top: 20px;
    }

    .back-btn {
        background-color: transparent;
        color: #D9D9D9;
        border: 1px solid #D9D9D9;
        padding: 10px 20px;
        border-radius: 50px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .back-btn:hover {
            background-color: #bfbfbf;
            color: #000;
        }
</style>

@code {
    private LoginModel loginModel = new();
    private string errorMessage;

    private void HandleLogin()
    {
        if (loginModel.Username == "admin" && loginModel.Password == "mypwd")
        {
            MyAuth.IsLoggedIn = true;
            Navigation.NavigateTo("/admin");
        }
        else
        {
            errorMessage = "Invalid credentials.";
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}