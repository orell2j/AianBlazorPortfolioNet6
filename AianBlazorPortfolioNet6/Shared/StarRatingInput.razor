@* StarRatingInput.razor *@
<div class="star-rating-input">
    @for (int star = 1; star <= 5; star++)
    {
        var currentStar = star;  // local copy for correct capture
        <div class="star-container">
            <div class="star-visual">
                @if (GetStarFill(currentStar) >= 1)
                {
                    <span class="star-full">&#9733;</span>
                }
                else if (GetStarFill(currentStar) >= 0.5)
                {
                    <span class="star-half">&#9733;</span>
                }
                else
                {
                    <span class="star-empty">&#9734;</span>
                }
            </div>
            <div class="star-clickable">
                <span class="half left" @onclick='() => OnStarClick(currentStar - 0.5)'></span>
                <span class="half right" @onclick='() => OnStarClick(currentStar)'></span>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public double Rating { get; set; } = 0.5; // default rating

    [Parameter]
    public EventCallback<double> RatingChanged { get; set; }

    private void OnStarClick(double newRating)
    {
        // Clamp newRating between 0.5 and 5
        newRating = Math.Clamp(newRating, 0.5, 5);
        Rating = newRating;
        RatingChanged.InvokeAsync(newRating);
    }

    private double GetStarFill(int starNumber)
    {
        if (Rating >= starNumber)
            return 1;
        else if (Rating >= starNumber - 0.5)
            return 0.5;
        else
            return 0;
    }
}
